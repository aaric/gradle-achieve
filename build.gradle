/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'eclipse-wtp'

// In this section you declare where to find the dependencies of your project
repositories {
	maven { url "http://$nexusServer/content/groups/public/" }
}

jar {
	manifest {
		attributes("Implementation-Title": project.name,
				"Implementation-Vendor": project.group,
				"Created-By": project.group,
				"Implementation-Date": new Date(),
				"Implementation-Version": project.version)
	}
}

war {
	manifest {
		attributes("Implementation-Title": project.name,
				"Implementation-Vendor": project.group,
				"Created-By": project.group,
				"Implementation-Date": new Date(),
				"Implementation-Version": project.version)
	}
}

ext {
	deplayToVersion = Boolean.getBoolean("deplayToVersion")
}

ext.libraries =[
    test: [
        "junit:junit:$junitVersion",
        "org.testng:testng:$testngVersion",
        "org.springframework:spring-test:$springframeworkVersion",
        "mysql:mysql-connector-java:$mysqlConnectorJavaVersion"
    ],
    log: [
    	"log4j:log4j:$log4jVersion",
    	"org.slf4j:slf4j-api:$slf4jVersion",
    	"org.slf4j:slf4j-log4j12:$slf4jVersion"
    ],
    stdlib: [
    	"taglibs:standard:$standardVersion",
    	"javax.servlet.jsp.jstl:jstl:$jstlVersion"
    ],
    servlet: [
    	"javax.servlet:servlet-api:$servletApiVersion"
    ],
    common: [
    	"dom4j:dom4j:$dom4jVersion",
    	"aopalliance:aopalliance:$aopallianceVersion",
    	"commons-beanutils:commons-beanutils:$commonsBeanutilsVersion",
    	"commons-codec:commons-codec:$commonsCodecVersion",
    	"commons-collections:commons-collections:$commonsCollectionsVersion",
    	"commons-fileupload:commons-fileupload:$commonsFileuploadVersion",
    	"commons-httpclient:commons-httpclient:$commonsHttpclientVersion",
    	"commons-io:commons-io:$commonsIoVesion",
    	"commons-lang:commons-lang:$commonsLangVersion",
    	"commons-logging:commons-logging:$commonsLoggingVersion",
    	"commons-net:commons-net:$commonsNetVersion",
    	/*"org.apache.activemq:activemq-all:$activemqVersion",*/
    	"org.apache.commons:commons-pool2:$commonsPool2Version",
    	"org.apache.xbean:xbean-spring:$xbeanSpringVersion",
    	"com.belerweb:pinyin4j:$pinyin4jVersion",
    	/*"com.github.penggle:kaptcha:$kaptchaVersion",*/
    	"com.mchange:mchange-commons-java:$mchangeCommonsJavaVersion"
    ],
    json: [
    	"net.sf.ezmorph:ezmorph:$ezmorphVersion",
    	"net.sf.json-lib:json-lib:$jsonLibVersion:jdk15",
    	"com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion",
    	"com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
    	"com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    ],
    mail: [
    	"javax.activation:activation:$activationVersion",
    	"javax.mail:mail:$mailVersion"
    ],
    db: [
    	"com.mchange:c3p0:$c3p0Version",
    	"org.mybatis:mybatis:$mybatisVersion",
    	"org.mybatis:mybatis-spring:$mybatisSpringVersion"
    ],
    driver: [
    	/*"org.mongodb:mongo-java-driver:$mongoJavaDriverVersion",*/
    	"mysql:mysql-connector-java:$mysqlConnectorJavaVersion"
    ],
    springframework: [
    	"org.springframework:spring-aop:$springframeworkVersion",
    	"org.springframework:spring-aspects:$springframeworkVersion",
    	"org.springframework:spring-beans:$springframeworkVersion",
    	"org.springframework:spring-context:$springframeworkVersion",
    	"org.springframework:spring-context-support:$springframeworkVersion",
    	"org.springframework:spring-core:$springframeworkVersion",
    	"org.springframework:spring-expression:$springframeworkVersion",
    	"org.springframework:spring-jdbc:$springframeworkVersion",
    	"org.springframework:spring-jms:$springframeworkVersion",
    	"org.springframework:spring-messaging:$springframeworkVersion",
    	"org.springframework:spring-tx:$springframeworkVersion",
    	"org.springframework:spring-web:$springframeworkVersion",
    	"org.springframework:spring-webmvc:$springframeworkVersion",
    	"org.springframework:spring-websocket:$springframeworkVersion"
    ],
    redis: [
    	"redis.clients:jedis:$jedisVersion",
    	"org.springframework.data:spring-data-redis:$springDataRedisVersion"
    ],
    poi: [
    	"org.apache.xmlbeans:xmlbeans:$xmlbeansVersion",
    	"org.apache.poi:poi:$poiVersion",
    	"org.apache.poi:poi-ooxml:$poiVersion",
    	"org.apache.poi:poi-ooxml-schemas:$poiVersion"
    ],
    quartz: [
    	"org.quartz-scheduler:quartz:$quartzVersion"
    ]
]

[compileJava,compileTestJava,javadoc]*.options*.encoding = "UTF-8"

dependencies {
	testCompile libraries.test
	providedCompile libraries.servlet
	compile libraries.log
	compile libraries.stdlib
	compile libraries.common
	compile libraries.json
	compile libraries.mail
	compile libraries.db
	compile libraries.springframework
	compile libraries.redis
	compile libraries.poi
}

jettyRun {
	httpPort 8080
	contextPath project.name
	webAppSourceDirectory file("$projectDir/src/main/webapp")
	reload "automatic"
	scanIntervalSeconds 0
}

uploadArchives {
	repositories {
		mavenDeployer {
			if(deplayToVersion) {
				repository(url: "http://$nexusServer/content/repositories/releases/") {
					authentication(userName: nexusDeployUsername, password: nexusDeployPassword);
				}
			}
			
			pom.project {
				url "https://github.com/aaric"
				inceptionYear 2017
				name project.name
				description project.description
				issueManagement {
					system "Sample"
					url "https://github.com/aaric"
				}
				
				licenses {
					license {
						name 'The Apache Software License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						distribution 'repo'
					}
				}
			}
		}
	}
}
